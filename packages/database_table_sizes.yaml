# This file includes all the entities for tracking database and table sizes.

sensor:
    # Get the MariaDB database size.
  - platform: sql
    db_url: !secret recorder_db_url
    # Scan every 30:t minute.
    scan_interval: 1800
    queries:
      # We keep track of the MariaDB database size.
      - name: home_assistant_db_size
        query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1024 / 1024, 1) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;'
        column: "value"
        unit_of_measurement: 'MB'
  - platform: sql
    db_url: !secret recorder_db_url
    # Scan every 30:t minute.
    scan_interval: 1800
    queries:
      # We keep track of the size for table: events
      - name: home_assistant_table_size_events
        query: 'SELECT table_schema as "database", table_name as "table", Round(Sum(data_length + index_length) / 1024 / 1024, 1) as "value" FROM information_schema.tables WHERE table_schema="homeassistant" and table_name="events";'
        column: "value"
        unit_of_measurement: 'MB'
  - platform: sql
    db_url: !secret recorder_db_url
    # Scan every 30:t minute.
    scan_interval: 1800
    queries:
      # We keep track of the size for table: states
      - name: home_assistant_table_size_states
        query: 'SELECT table_schema as "database", table_name as "table", Round(Sum(data_length + index_length) / 1024 / 1024, 1) as "value" FROM information_schema.tables WHERE table_schema="homeassistant" and table_name="states";'
        column: "value"
        unit_of_measurement: 'MB'
  - platform: sql
    db_url: !secret recorder_db_url
    # Scan every 30:t minute.
    scan_interval: 1800
    queries:
      # We keep track of the size for table: statistics
      - name: home_assistant_table_size_statistics
        query: 'SELECT table_schema as "database", table_name as "table", Round(Sum(data_length + index_length) / 1024 / 1024, 1) as "value" FROM information_schema.tables WHERE table_schema="homeassistant" and table_name="statistics";'
        column: "value"
        unit_of_measurement: 'MB'
  - platform: sql
    db_url: !secret recorder_db_url
    # Scan every 30:t minute.
    scan_interval: 1800
    queries:
      # We keep track of the size for table: statistics_short_term
      - name: home_assistant_table_size_statistics_short_term
        query: 'SELECT table_schema as "database", table_name as "table", Round(Sum(data_length + index_length) / 1024 / 1024, 1) as "value" FROM information_schema.tables WHERE table_schema="homeassistant" and table_name="statistics_short_term";'
        column: "value"
        unit_of_measurement: 'MB'
  - platform: sql
    db_url: !secret recorder_db_url
    # Scan once every day.
    scan_interval: 1800
    queries:
      # We keep track of the min(created date) for table: events
      - name: home_assistant_min_created_events
        query: 'select convert(min(created), DATE) as "value" from homeassistant.events;'
        column: "value"
  - platform: sql
    db_url: !secret recorder_db_url
    # Scan once every day.
    scan_interval: 1800
    queries:
      # We keep track of the min(created date) for table: states
      - name: home_assistant_min_created_states
        query: 'select convert(min(created), DATE) as "value" from homeassistant.states;'
        column: "value"
  - platform: sql
    db_url: !secret recorder_db_url
    # Scan once every day.
    scan_interval: 1800
    queries:
      # We keep track of the min(created date) for table: statistics
      - name: home_assistant_min_created_statistics
        query: 'select convert(min(created), DATE) as "value" from homeassistant.statistics;'
        column: "value"
  - platform: sql
    db_url: !secret recorder_db_url
    # Scan once every day.
    scan_interval: 86400
    queries:
      # We keep track of the min(created date) for table: statistics_short_term
      - name: home_assistant_min_created_statistics_short_term
        query: 'select convert(min(created), DATE) as "value" from homeassistant.statistics_short_term;'
        column: "value"
  - platform: sql
    db_url: !secret recorder_db_url
    # Scan once every day.
    scan_interval: 86400
    queries:
      # We keep track of 30 entities with most rows in the database.
      # Inspiration from: https://stackoverflow.com/questions/276927/can-i-concatenate-multiple-mysql-rows-into-one-field?rq=1
      - name: home_assistant_entities_with_most_rows
        query: 'select * from (select concat(entity_id,": ",count(distinct state_id)) as "value" from homeassistant.states group by entity_id order by COUNT(*) desc limit 0,30) t limit 0,30;'
        column: "value"